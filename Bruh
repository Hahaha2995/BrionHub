local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport
if queueteleport then
    pcall(function()
        queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Hahaha2995/BrionHub/main/Bruh', true))()")
    end)
end

--============================================================
--=     FULL CLEANUP + TITAN TRACKING + EFFECT REMOVAL       =
--=   Handles Titans, Visuals, Lighting, Skills, Debris,     =
--=     and Server GET spam (DrillThrust, Retry, etc)        =
--============================================================

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

--// Titan Tracker
local function updateTitansPosition()
    local fakeHead = Workspace:FindFirstChild("Fake_Head")
    local titansFolder = Workspace:FindFirstChild("Titans")

    if not fakeHead then
        warn("Fake_Head not found.")
        return
    end
    if not titansFolder then
        warn("Titans folder not found.")
        return
    end

    RunService.Heartbeat:Connect(function()
        for _, titan in ipairs(titansFolder:GetChildren()) do
            local root = titan:FindFirstChild("HumanoidRootPart")
            local hit = titan:FindFirstChild("Hitboxes") and titan.Hitboxes:FindFirstChild("Hit")
            local nape = hit and hit:FindFirstChild("Nape")

            if root and nape then
                if game.PlaceId == 13379349730 then
                    nape.Position = Vector3.new(512, 173, 774)
                else
                    root.Position = fakeHead.Position
                    nape.Position = fakeHead.Position
                    nape.Size = Vector3.new(9300, 9300, 9300)
                end
            end
        end
    end)
end

--// Visual Effect Removal
local visualClasses = {
    "ParticleEmitter", "Trail", "Beam", "Smoke", "Fire", "Sparkles", "Decal", "Texture", "Highlight",
    "PointLight", "SpotLight", "SurfaceLight", "Light"
}

local function isVisual(obj)
    return table.find(visualClasses, obj.ClassName) ~= nil
end

local function removeVisual(obj)
    if obj:IsA("Light") or obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
        obj.Enabled = false
        obj.Brightness = 0
    else
        obj:Destroy()
    end
end

local function isExcluded(obj)
    return (obj:IsDescendantOf(Workspace.Titans) or obj:IsDescendantOf(Workspace:FindFirstChild("Points"))) or
           (obj.Parent and obj.Parent:IsA("Model") and obj.Parent:FindFirstChild("Humanoid"))
end

local function cleanVisuals(container)
    for _, obj in ipairs(container:GetDescendants()) do
        if isVisual(obj) and not isExcluded(obj) then
            removeVisual(obj)
        end
    end
end

--// Lighting Reset
local function resetLighting()
    Lighting.FogEnd = 100000
    Lighting.FogColor = Color3.new(1, 1, 1)
    Lighting.Ambient = Color3.new(1, 1, 1)
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    Lighting.Brightness = 2
    Lighting.TimeOfDay = "14:00:00"
    Lighting.ClockTime = 12

    for _, child in ipairs(Lighting:GetChildren()) do
        child:Destroy()
    end
end

--// Delete Climbables & Unclimbables
local function deleteEnvironment()
    for _, folderName in ipairs({"Climbable", "Unclimbable"}) do
        local folder = Workspace:FindFirstChild(folderName)
        if folder then folder:Destroy() end
    end

    local objFolder = ReplicatedStorage:FindFirstChild("Assets") and ReplicatedStorage.Assets:FindFirstChild("Objects")
    if objFolder then objFolder:Destroy() end

    local skillsFolder = ReplicatedStorage.Assets and ReplicatedStorage.Assets:FindFirstChild("Skills")
    if skillsFolder then
        for _, skill in ipairs(skillsFolder:GetChildren()) do
            if skill.Name ~= "DrillThrust" and skill.Name ~= "TorrentialSteel" then
                skill:Destroy()
            end
        end
    end
end

--// Debris Auto Cleanup
local function deleteDebris()
    RunService.Heartbeat:Connect(function()
        local debris = Workspace:FindFirstChild("Debris")
        if debris then
            for _, child in ipairs(debris:GetChildren()) do
                child:Destroy()
            end
        end
    end)
end

--// GET Request Spammer
local function invokeServerLoop()
    task.spawn(function()
        while true do
            local remote = ReplicatedStorage.Assets.Remotes.GET
            remote:InvokeServer("S_Skills", "Usage", "23")
            task.wait(0.02)
            remote:InvokeServer("S_Skills", "Usage", "14")
            task.wait(0.1)
            remote:InvokeServer("Functions", "Retry", "Add")
            task.wait(0.1)
        end
    end)
end

--// Run All
task.spawn(function()
    updateTitansPosition()
    resetLighting()
    deleteEnvironment()
    deleteDebris()
    invokeServerLoop()

    cleanVisuals(Workspace)
    cleanVisuals(ReplicatedStorage)
    cleanVisuals(Lighting)
    cleanVisuals(game:GetService("StarterGui"))
    cleanVisuals(game:GetService("StarterPack"))
    cleanVisuals(game:GetService("StarterPlayer"))
    cleanVisuals(game:GetService("ReplicatedFirst"))

    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            cleanVisuals(player.Character)
        end
    end
end)